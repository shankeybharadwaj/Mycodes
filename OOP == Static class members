// ======================================================
// NOTE :: This is Player.h file
// ======================================================

#ifndef _PLAYER_H_
#define _PLAYER_H_
#include <string>


class Player{
private:
    static int num_players;     // This belongs to the class and not to any specific class object.
    std::string name;
    int health;
    int xp;
public:
    std::string get_name(){
        return name;
    }
    int get_health(){
        return health;
    }
    int get_xp(){
        return xp;
    }
    Player(std::string n="None",int h=0,int x=0);
    Player(const Player &source);
    static int get_num_players();
    ~Player();
};

#endif // _PLAYER_H_


// ================================================================
// NOTE :: This is Player.cpp file
// ================================================================


#include "Player.h"

int Player::num_players{0};     // We can initialise it here and not in the '.h' file
Player::Player(std::string n,int h,int x):name{n},health{h},xp{x}{
    ++num_players;
}
Player::Player(const Player &source):Player{source.name,source.health,source.xp}{
}
Player::~Player(){
    --num_players;
}
int Player::get_num_players(){
    return num_players;
}




// ================================================================
// NOTE :: This is main.cpp file
// ================================================================

#include <iostream>
#include "Player.h"
using namespace std;

void display_active_players(){
    cout<<"Active players: "<<Player::get_num_players()<<endl;
}

int main(){
    display_active_players();   // 0
    Player hero{"Hero"};
    display_active_players();   // 1
    {
        Player villain{"Villain"};
        display_active_players();   // 2
    }
    display_active_players();   // 1
    Player *enemy=new Player("Enemy",100,20);
    display_active_players();   // 2
    delete enemy;
    display_active_players();   // 1
    return 0;
}
