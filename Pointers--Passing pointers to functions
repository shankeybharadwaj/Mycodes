#include <iostream>
#include <vector>
using namespace std;

void double_data(int *int_ptr);
void double_data(int *int_ptr){
    *int_ptr *=2;
}
void swap(int *x,int *y){
    int temp = *x;
    *x=*y;
    *y=temp;
}

void display(const vector<string> *const v){
    // (*v).at(0)="Shankey";        const vector<string>    doesnt let this happen 
    for(auto str:*v)
        cout<<str<<" ";
    cout<<endl;
    // v=nullptr;   // const v      doesnt let this happen
}

void display(int *array,int s){         // We can use same function name i.e. display  (operator overloading)
    while(*array != s)                  // Here we cannot use *const array  because we are changing the value of array (incrementing) 
        cout<< *array++ <<" ";      
    cout<<endl;
}

int main()
{
    int value{10};
    cout <<value<<endl;
    double_data(&value);
    cout<<value<<endl;
    
    cout<<"\n=================================\n";
    
    int a{10},b{20};
    cout<<a<<" "<<b<<endl;
    swap(&a,&b);
    cout<<a<<" "<<b<<endl;
    
    cout<<"\n----------------------------------\n";
    
    vector<string> fruits{"apple","banana","mango"};
    display(&fruits);
    
    cout<<"\n---------------------------------\n";
    
    int scores[]{100,90,80,70,60,-1};
    display(scores,-1);             // 100 90 80 70 60
        
    return 0;
}
